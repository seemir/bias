# EM algorithm.
# ----------------------------------------------------------- #
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEm <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEm <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
# ----------------------------------------------------------- #
# Impute the indicator variables with classification and
# regression trees algorithm
# ----------------------------------------------------------- #
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind,method ="cart"))
# ----------------------------------------------------------- #
# Merge imputed data into one data file
# ----------------------------------------------------------- #
HFpEFimp <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEFimp <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
# ----------------------------------------------------------- #
# Sort column names
# ----------------------------------------------------------- #
HFpEFimp <- sort.column.names(HFpEFimp)
HFmrEFimp <- sort.column.names(HFmrEFimp)
# ----------------------------------------------------------- #
# Save the data files
# ----------------------------------------------------------- #
save(HFpEFimp, file = "data_files/HFpEFimp.Rdat")
save(HFmrEFimp, file = "data_files/HFmrEFimp.Rdat")
# ----------------------------------------------------------- #
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFimp", "HFmrEFimp")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFimp", "HFmrEFimp")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEFimp)[-56,], cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEFimp), cor = T)
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
ncp <- 34; ncmr <- 31
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
pca.var.plot(HFmrEFpca, ncmr, title = "HFmrEF")
pca.cluster.plot(HFpEFpca, ncp = ncp, km.clust = 3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = ncmr, km.clust=2,hc.clust=2)
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("Amelia", "mice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
# ----------------------------------------------------------- #
# Load data set with same variables and source helper functions
# ----------------------------------------------------------- #
load("data_files/HFfullDataSet.Rdat")
load("data_files/SyndClass.Rdat")
source("_helper_func.R")
# ----------------------------------------------------------- #
# Summary of missing variables
# ----------------------------------------------------------- #
top.n.missing(HFfullDataSet, 10)
# ----------------------------------------------------------- #
# Split variables into indicator and categorical variables
# ----------------------------------------------------------- #
HFfullRmInd <- rm.indicator(HFfullDataSet, 8)
HFfullInd <- HFfullRmInd$indicator
HFfullNoInd <- HFfullRmInd$non.indicator
# ----------------------------------------------------------- #
# Impute data using Bootstrap EM and CART
# ----------------------------------------------------------- #
bnd <- data.bounds(HFfullNoInd, 0, Inf)
HFfullEm <- boot.em.impute(HFfullNoInd, bnd, n.boot = 10)
HFfullCart <- complete(mice(HFfullInd, method = "cart"))
# ----------------------------------------------------------- #
# Combine imputed data sets into one
# ----------------------------------------------------------- #
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
# ----------------------------------------------------------- #
# Sort columns
# ----------------------------------------------------------- #
HFfullImpDataSet <- sort.column.names(HFfullImpDataSet)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
# ----------------------------------------------------------- #
# Explained variance
# ----------------------------------------------------------- #
pca.var.plot(HFfullpca, 41, title = "HF same variables")
pca.cluster.plot(HFfullpca, 41, hc.clust = 2, ellipse = T)
pca.cluster.plot(HFfullpca, 41, hc.clust = 2,
actual = SyndClass[, 2])
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("reporttools", "VIM", "Hmisc", "xtable",
"tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
path <- "data_files/"; r <- ".Rdat"
fileNames <- c("HFpEFdataSet", "HFmrEFdataSet",
"HFpEFoutcomes", "HFmrEFoutcomes")
lapply(gsub(" ", "", paste(path, fileNames, r)),
load,.GlobalEnv)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("reporttools", "VIM", "Hmisc", "xtable",
"tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
path <- "data_files/"; r <- ".Rdat"
fileNames <- c("HFpEFdataSet", "HFmrEFdataSet",
"HFpEFoutcomes", "HFmrEFoutcomes",
"HFfullOutcomes")
lapply(gsub(" ", "", paste(path, fileNames, r)),
load,.GlobalEnv)
tabOutHFfull <- rbind(label.summary(as.matrix(HFfullOutcomes),
2, cbind("Group", "Dead?", "Readm?", "n",
"%Tot"), 3, 5))
tabOutHFfull
tabOutHFpEF
tabOutHFpEF <- rbind(label.summary(as.matrix(HFpEFoutcomes),
2, c("Group", "Dead?", "Readm?", "n",
"% Tot"), 3, 5), r, r)
tabOutHFpEF
r <- rep("", 5)
tabOutHFfull <- rbind(label.summary(as.matrix(HFfullOutcomes),
2, cbind("Group", "Dead?", "Readm?", "n",
"%Tot"), 3, 5))
tabOutHFpEF <- rbind(label.summary(as.matrix(HFpEFoutcomes),
2, c("Group", "Dead?", "Readm?", "n",
"% Tot"), 3, 5), r, r)
tabOutHFmrEF <- label.summary(as.matrix(HFmrEFoutcomes),
2, c("Group", "Dead?", "Readm?",
"n", "% Tot"), 3, 5)
tabOutHFfull
tabOutHFpEF
tabOutHFmrEF
print(xtable(cbind(tabOutHFpEF, tabOutHFmrEF)),
include.rownames = F)
print(xtable(tabOutHFfull), include.rownames = F)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("reporttools", "VIM", "Hmisc", "xtable",
"tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
path <- "data_files/"; r <- ".Rdat"
fileNames <- c("HFpEFdataSet", "HFmrEFdataSet",
"HFpEFoutcomes", "HFmrEFoutcomes",
"HFfullOutcomes")
lapply(gsub(" ", "", paste(path, fileNames, r)),
load,.GlobalEnv)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("reporttools", "VIM", "Hmisc", "xtable",
"tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
path <- "data_files/"; r <- ".Rdat"
fileNames <- c("HFpEFdataSet", "HFmrEFdataSet",
"HFpEFoutcomes", "HFmrEFoutcomes",
"HFfullOutcomes")
lapply(gsub(" ", "", paste(path, fileNames, r)),
load,.GlobalEnv)
# ----------------------------------------------------------- #
# Plot of missing values distribution
# ----------------------------------------------------------- #
pathToImages <- "../../../doc/thesis/images/"
tikz(file=paste(c(pathToImages,"HFpEF_miss_dist.tex"),
collapse = ""))
aggr(HFpEFdataSet, plot = T, sortVars = T,
bars = F, combined = T, ylabs = "", cex.axis = 0.7)
dev.off()
tikz(file = paste(c(pathToImages, "HFmrEF_miss_dist.tex"),
collapse = ""))
aggr(HFmrEFdataSet, plot = T,
sortVars = T, bars = F, combined = T, ylabs = "",
cex.axis = 0.7)
dev.off()
# ----------------------------------------------------------- #
# Summary of variables
# ----------------------------------------------------------- #
# Reorder data matrix by phenotype domains
# ----------------------------------------------------------- #
nameOrder <- c("age", "gender", "white", "asian", "black",
"breathless", "sbp", "dbp", "admissionwgt",
"bp", "bmiadmission", "pulse", "a-fib",
"copdasthma", "irondef", "dm", "obesity",
"copdasthma", "ihd", "comorbidities",
"ecgqrsduration", "ecgqrsother", "ecgrate",
"ecgrhythmother", "lvh", "normalecgqrs", "lbbb",
"rbbb", "sr", "hb", "wbc", "tsat", "plts","pcv",
"ferritin", "k", "ironlevels", "chol",
"ntprobnp", "gfr", "mcv", "na", "lvef", "ewave",
"pasp", "ee", "mr", "tr", "as", "ai",
"rvfunction", "af", "timetohfadm",
"hfhospitalisation", "los")
# ----------------------------------------------------------- #
# Descriptive statistics
# ----------------------------------------------------------- #
capHFpEF <- "Patient characteristics: HFpEF"
labHFpEF <- "tab:desc_stat_HFpEF"
tableContinuous(HFpEFdataSet[, nameOrder],
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = capHFpEF, lab = labHFpEF)
# ----------------------------------------------------------- #
capHFmrEF <- "Patient characteristics: HFmrEF"
labHFmrEF <- "tab:desc_stat_HFmrEF"
tableContinuous(HFmrEFdataSet[, nameOrder],
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = capHFmrEF, lab = labHFmrEF)
# ----------------------------------------------------------- #
# Outcomes table
# ----------------------------------------------------------- #
r <- rep("", 5)
tabOutHFfull <- rbind(label.summary(as.matrix(HFfullOutcomes),
2, cbind("Group", "Dead?", "Readm?", "n",
"%Tot"), 3, 5))
tabOutHFpEF <- rbind(label.summary(as.matrix(HFpEFoutcomes),
2, c("Group", "Dead?", "Readm?", "n",
"% Tot"), 3, 5), r, r)
tabOutHFmrEF <- label.summary(as.matrix(HFmrEFoutcomes),
2, c("Group", "Dead?", "Readm?",
"n", "% Tot"), 3, 5)
print(xtable(tabOutHFfull), include.rownames = F)
print(xtable(cbind(tabOutHFpEF, tabOutHFmrEF)),
include.rownames = F)
# ----------------------------------------------------------- #
# Tables of top 10 missing values variables in both data sets
# ----------------------------------------------------------- #
HFpEFmiss <- top.n.missing(HFpEFdataSet, 10)
HFmrEFmiss <- top.n.missing(HFmrEFdataSet, 10)
# ----------------------------------------------------------- #
# Combine missing values table and convert to Latex code
# ----------------------------------------------------------- #
xtable(cbind(round(HFpEFmiss,3), rownames(HFmrEFmiss),
round(HFmrEFmiss,3)))
# ----------------------------------------------------------- #
HFfullMiss <- top.n.missing(HFpEFdataSet, 10)
HFfullMiss
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("reporttools", "VIM", "Hmisc", "xtable",
"tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
path <- "data_files/"; r <- ".Rdat"
fileNames <- c("HFpEFdataSet", "HFmrEFdataSet",
"HFpEFoutcomes", "HFmrEFoutcomes",
"HFfullOutcomes")
lapply(gsub(" ", "", paste(path, fileNames, r)),
load,.GlobalEnv)
# ----------------------------------------------------------- #
# Plot of missing values distribution
# ----------------------------------------------------------- #
pathToImages <- "../../../doc/thesis/images/"
tikz(file=paste(c(pathToImages,"HFpEF_miss_dist.tex"),
collapse = ""))
aggr(HFpEFdataSet, plot = T, sortVars = T,
bars = F, combined = T, ylabs = "", cex.axis = 0.7)
dev.off()
tikz(file = paste(c(pathToImages, "HFmrEF_miss_dist.tex"),
collapse = ""))
aggr(HFmrEFdataSet, plot = T,
sortVars = T, bars = F, combined = T, ylabs = "",
cex.axis = 0.7)
dev.off()
# ----------------------------------------------------------- #
# Summary of variables
# ----------------------------------------------------------- #
# Reorder data matrix by phenotype domains
# ----------------------------------------------------------- #
nameOrder <- c("age", "gender", "white", "asian", "black",
"breathless", "sbp", "dbp", "admissionwgt",
"bp", "bmiadmission", "pulse", "a-fib",
"copdasthma", "irondef", "dm", "obesity",
"copdasthma", "ihd", "comorbidities",
"ecgqrsduration", "ecgqrsother", "ecgrate",
"ecgrhythmother", "lvh", "normalecgqrs", "lbbb",
"rbbb", "sr", "hb", "wbc", "tsat", "plts","pcv",
"ferritin", "k", "ironlevels", "chol",
"ntprobnp", "gfr", "mcv", "na", "lvef", "ewave",
"pasp", "ee", "mr", "tr", "as", "ai",
"rvfunction", "af", "timetohfadm",
"hfhospitalisation", "los")
# ----------------------------------------------------------- #
# Descriptive statistics
# ----------------------------------------------------------- #
capHFpEF <- "Patient characteristics: HFpEF"
labHFpEF <- "tab:desc_stat_HFpEF"
tableContinuous(HFpEFdataSet[, nameOrder],
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = capHFpEF, lab = labHFpEF)
# ----------------------------------------------------------- #
capHFmrEF <- "Patient characteristics: HFmrEF"
labHFmrEF <- "tab:desc_stat_HFmrEF"
tableContinuous(HFmrEFdataSet[, nameOrder],
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = capHFmrEF, lab = labHFmrEF)
# ----------------------------------------------------------- #
# Outcomes table
# ----------------------------------------------------------- #
r <- rep("", 5)
tabOutHFfull <- rbind(label.summary(as.matrix(HFfullOutcomes),
2, cbind("Group", "Dead?", "Readm?", "n",
"%Tot"), 3, 5))
tabOutHFpEF <- rbind(label.summary(as.matrix(HFpEFoutcomes),
2, c("Group", "Dead?", "Readm?", "n",
"% Tot"), 3, 5), r, r)
tabOutHFmrEF <- label.summary(as.matrix(HFmrEFoutcomes),
2, c("Group", "Dead?", "Readm?",
"n", "% Tot"), 3, 5)
print(xtable(tabOutHFfull), include.rownames = F)
print(xtable(cbind(tabOutHFpEF, tabOutHFmrEF)),
include.rownames = F)
# ----------------------------------------------------------- #
# Tables of top 10 missing values variables in both data sets
# ----------------------------------------------------------- #
HFfullMiss <- top.n.missing(HFpEFdataSet, 10)
HFpEFmiss <- top.n.missing(HFpEFdataSet, 10)
HFmrEFmiss <- top.n.missing(HFmrEFdataSet, 10)
# ----------------------------------------------------------- #
# Combine missing values table and convert to Latex code
# ----------------------------------------------------------- #
xtable(cbind(round(HFpEFmiss,3), rownames(HFmrEFmiss),
round(HFmrEFmiss,3)))
# ----------------------------------------------------------- #
xtable(HFfullMiss)
xtable(HFfullMiss, digits = 3)
HFfullMiss <- top.n.missing(HFfullOutcomes, 10)
HFfullMiss <- top.n.missing(HFfullOutcomes, 10)
HFfullOutcomes
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("reporttools", "VIM", "Hmisc", "xtable",
"tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
path <- "data_files/"; r <- ".Rdat"
fileNames <- c("HFpEFdataSet", "HFmrEFdataSet",
"HFpEFoutcomes", "HFmrEFoutcomes",
"HFfullDataSet", "HFfullOutcomes")
lapply(gsub(" ", "", paste(path, fileNames, r)),
load,.GlobalEnv)
# ----------------------------------------------------------- #
# Plot of missing values distribution
# ----------------------------------------------------------- #
pathToImages <- "../../../doc/thesis/images/"
tikz(file=paste(c(pathToImages,"HFpEF_miss_dist.tex"),
collapse = ""))
aggr(HFpEFdataSet, plot = T, sortVars = T,
bars = F, combined = T, ylabs = "", cex.axis = 0.7)
dev.off()
tikz(file = paste(c(pathToImages, "HFmrEF_miss_dist.tex"),
collapse = ""))
aggr(HFmrEFdataSet, plot = T,
sortVars = T, bars = F, combined = T, ylabs = "",
cex.axis = 0.7)
dev.off()
# ----------------------------------------------------------- #
# Summary of variables
# ----------------------------------------------------------- #
# Reorder data matrix by phenotype domains
# ----------------------------------------------------------- #
nameOrder <- c("age", "gender", "white", "asian", "black",
"breathless", "sbp", "dbp", "admissionwgt",
"bp", "bmiadmission", "pulse", "a-fib",
"copdasthma", "irondef", "dm", "obesity",
"copdasthma", "ihd", "comorbidities",
"ecgqrsduration", "ecgqrsother", "ecgrate",
"ecgrhythmother", "lvh", "normalecgqrs", "lbbb",
"rbbb", "sr", "hb", "wbc", "tsat", "plts","pcv",
"ferritin", "k", "ironlevels", "chol",
"ntprobnp", "gfr", "mcv", "na", "lvef", "ewave",
"pasp", "ee", "mr", "tr", "as", "ai",
"rvfunction", "af", "timetohfadm",
"hfhospitalisation", "los")
# ----------------------------------------------------------- #
# Descriptive statistics
# ----------------------------------------------------------- #
capHFpEF <- "Patient characteristics: HFpEF"
labHFpEF <- "tab:desc_stat_HFpEF"
tableContinuous(HFpEFdataSet[, nameOrder],
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = capHFpEF, lab = labHFpEF)
# ----------------------------------------------------------- #
capHFmrEF <- "Patient characteristics: HFmrEF"
labHFmrEF <- "tab:desc_stat_HFmrEF"
tableContinuous(HFmrEFdataSet[, nameOrder],
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = capHFmrEF, lab = labHFmrEF)
# ----------------------------------------------------------- #
# Outcomes table
# ----------------------------------------------------------- #
r <- rep("", 5)
tabOutHFfull <- rbind(label.summary(as.matrix(HFfullOutcomes),
2, cbind("Group", "Dead?", "Readm?", "n",
"%Tot"), 3, 5))
tabOutHFpEF <- rbind(label.summary(as.matrix(HFpEFoutcomes),
2, c("Group", "Dead?", "Readm?", "n",
"% Tot"), 3, 5), r, r)
tabOutHFmrEF <- label.summary(as.matrix(HFmrEFoutcomes),
2, c("Group", "Dead?", "Readm?",
"n", "% Tot"), 3, 5)
print(xtable(tabOutHFfull), include.rownames = F)
print(xtable(cbind(tabOutHFpEF, tabOutHFmrEF)),
include.rownames = F)
# ----------------------------------------------------------- #
# Tables of top 10 missing values variables in both data sets
# ----------------------------------------------------------- #
HFfullMiss <- top.n.missing(HFfullOutcomes, 10)
HFpEFmiss <- top.n.missing(HFpEFdataSet, 10)
HFmrEFmiss <- top.n.missing(HFmrEFdataSet, 10)
# ----------------------------------------------------------- #
# Combine missing values table and convert to Latex code
# ----------------------------------------------------------- #
xtable(HFfullMiss, digits = 3)
xtable(cbind(round(HFpEFmiss,3), rownames(HFmrEFmiss),
round(HFmrEFmiss,3)))
# ----------------------------------------------------------- #
HFfullMiss <- top.n.missing(HFfullDataSet, 10)
xtable(HFfullMiss, digits = 3)
xtable(HFfullMiss, digits = c(0,3,3,3))
xtable(HFfullMiss, digits = c(0,0,3,3,3))
