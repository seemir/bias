# values and that have near zero variance (not for indicator
# variables).
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
CutOff <- 0.15 # cut.off percentage
HFpEFind <- rm.missing(HFpEFind, cut.off = CutOff,
near.zero.var = F)
HFpEFcon <- rm.missing(HFpEFnoInd, cut.off = CutOff)
HFpEFlist <- list(HFpEFind, HFpEFcon)
HFpEFmcar <- do.call(rbind, lapply(HFpEFlist, little.mcar))
HFpEFmcarNames <- c("indicator","continuous")
rownames(HFpEFmcar) <- HFpEFmcarNames
# ----------------------------------------------------------- #
# In HFmrEF
# ----------------------------------------------------------- #
CutOff <- 0.25 # cut.off percentage
HFmrEFind <- rm.missing(HFmrEFind, cut.off = CutOff,
near.zero.var = F)
HFmrEFcon <- rm.missing(HFmrEFnoInd, cut.off = CutOff)
HFmrEFlist <- list(HFmrEFind, HFmrEFcon)
HFmrEFmcar <- do.call(rbind, lapply(HFmrEFlist, little.mcar))
HFmrEFmcarNames <- c("indicator","continuous")
rownames(HFmrEFmcar) <- HFmrEFmcarNames
xtable(rbind(HFpEFmcar, HFmrEFmcar), digits = c(0,0,0,4,0,5))
# ----------------------------------------------------------- #
# Report missing data after removing variables
# ----------------------------------------------------------- #
top.n.missing(cbind(HFpEFcon, HFpEFind), n = 10)
top.n.missing(cbind(HFmrEFcon, HFmrEFind), n = 10)
# ----------------------------------------------------------- #
# Impute missing values
# ----------------------------------------------------------- #
# Impute the non-indicator variables with the Bootstrap
# EM algorithm.
# ----------------------------------------------------------- #
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEmb <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEmb <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
# ----------------------------------------------------------- #
# Impute the indicator variables with classification and
# regression trees algorithm
# ----------------------------------------------------------- #
HFpEFindImpEmbBounds <- data.bounds(HFpEFind, 0, Inf)
HFpEFindImpEmb <- boot.em.impute(HFpEFind,
HFpEFindImpEmbBounds)
HFmrEFindImpEmbBounds <- data.bounds(HFmrEFind, 0, Inf)
HFmrEFindImpEmb <- boot.em.impute(HFmrEFind,
HFmrEFindImpEmbBounds)
# ----------------------------------------------------------- #
# Merge imputed data into one data file
# ----------------------------------------------------------- #
HFpEFimp <- cbind(HFpEFconImpEmb, HFpEFindImpEmb)
HFmrEFimp <- cbind(HFmrEFconImpEmb, HFmrEFindImpEmb)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("BaylorEdPsych", "mvnmle", "xtable", "Amelia",
"rlist", "mice", "caret")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load indicator and non indicator variables
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFind", "HFmrEFind",
"HFpEFnoInd", "HFmrEFnoInd")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Little's test to assess for missing completely at random.
# Remove variables with more than a given cut.off missing
# values and that have near zero variance (not for indicator
# variables).
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
CutOff <- 0.15 # cut.off percentage
HFpEFind <- rm.missing(HFpEFind, cut.off = CutOff,
near.zero.var = F)
HFpEFcon <- rm.missing(HFpEFnoInd, cut.off = CutOff)
HFpEFlist <- list(HFpEFind, HFpEFcon)
HFpEFmcar <- do.call(rbind, lapply(HFpEFlist, little.mcar))
HFpEFmcarNames <- c("indicator","continuous")
rownames(HFpEFmcar) <- HFpEFmcarNames
# ----------------------------------------------------------- #
# In HFmrEF
# ----------------------------------------------------------- #
CutOff <- 0.25 # cut.off percentage
HFmrEFind <- rm.missing(HFmrEFind, cut.off = CutOff,
near.zero.var = F)
HFmrEFcon <- rm.missing(HFmrEFnoInd, cut.off = CutOff)
HFmrEFlist <- list(HFmrEFind, HFmrEFcon)
HFmrEFmcar <- do.call(rbind, lapply(HFmrEFlist, little.mcar))
HFmrEFmcarNames <- c("indicator","continuous")
rownames(HFmrEFmcar) <- HFmrEFmcarNames
xtable(rbind(HFpEFmcar, HFmrEFmcar), digits = c(0,0,0,4,0,5))
# ----------------------------------------------------------- #
# Report missing data after removing variables
# ----------------------------------------------------------- #
top.n.missing(cbind(HFpEFcon, HFpEFind), n = 10)
top.n.missing(cbind(HFmrEFcon, HFmrEFind), n = 10)
# ----------------------------------------------------------- #
# Impute missing values
# ----------------------------------------------------------- #
# Impute the non-indicator variables with the Bootstrap
# EM algorithm.
# ----------------------------------------------------------- #
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEm <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEm <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
# ----------------------------------------------------------- #
# Impute the indicator variables with classification and
# regression trees algorithm
# ----------------------------------------------------------- #
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind, method ="cart"))
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("BaylorEdPsych", "mvnmle", "xtable", "Amelia",
"rlist", "mice", "caret")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load indicator and non indicator variables
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFind", "HFmrEFind",
"HFpEFnoInd", "HFmrEFnoInd")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Little's test to assess for missing completely at random.
# Remove variables with more than a given cut.off missing
# values and that have near zero variance (not for indicator
# variables).
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
CutOff <- 0.15 # cut.off percentage
HFpEFind <- rm.missing(HFpEFind, cut.off = CutOff,
near.zero.var = F)
HFpEFcon <- rm.missing(HFpEFnoInd, cut.off = CutOff)
HFpEFlist <- list(HFpEFind, HFpEFcon)
HFpEFmcar <- do.call(rbind, lapply(HFpEFlist, little.mcar))
HFpEFmcarNames <- c("indicator","continuous")
rownames(HFpEFmcar) <- HFpEFmcarNames
# ----------------------------------------------------------- #
# In HFmrEF
# ----------------------------------------------------------- #
CutOff <- 0.25 # cut.off percentage
HFmrEFind <- rm.missing(HFmrEFind, cut.off = CutOff,
near.zero.var = F)
HFmrEFcon <- rm.missing(HFmrEFnoInd, cut.off = CutOff)
HFmrEFlist <- list(HFmrEFind, HFmrEFcon)
HFmrEFmcar <- do.call(rbind, lapply(HFmrEFlist, little.mcar))
HFmrEFmcarNames <- c("indicator","continuous")
rownames(HFmrEFmcar) <- HFmrEFmcarNames
xtable(rbind(HFpEFmcar, HFmrEFmcar), digits = c(0,0,0,4,0,5))
# ----------------------------------------------------------- #
# Report missing data after removing variables
# ----------------------------------------------------------- #
top.n.missing(cbind(HFpEFcon, HFpEFind), n = 10)
top.n.missing(cbind(HFmrEFcon, HFmrEFind), n = 10)
# ----------------------------------------------------------- #
# Impute missing values
# ----------------------------------------------------------- #
# Impute the non-indicator variables with the Bootstrap
# EM algorithm.
# ----------------------------------------------------------- #
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEm <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEm <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
# ----------------------------------------------------------- #
# Impute the indicator variables with classification and
# regression trees algorithm
# ----------------------------------------------------------- #
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind, method ="cart"))
HFpEFindImpCart <- complete(mice(HFpEFind[,-1], method ="cart"))
View(HFpEFindImpCart)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("BaylorEdPsych", "mvnmle", "xtable", "Amelia",
"rlist", "mice", "caret")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load indicator and non indicator variables
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFind", "HFmrEFind",
"HFpEFnoInd", "HFmrEFnoInd")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
View(HFpEFind)
View(HFmrEFind)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("BaylorEdPsych", "mvnmle", "xtable", "Amelia",
"rlist", "mice", "caret")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load indicator and non indicator variables
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFind", "HFmrEFind",
"HFpEFnoInd", "HFmrEFnoInd")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Little's test to assess for missing completely at random.
# Remove variables with more than a given cut.off missing
# values and that have near zero variance (not for indicator
# variables).
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
CutOff <- 0.15 # cut.off percentage
HFpEFind <- rm.missing(HFpEFind, cut.off = CutOff,
near.zero.var = F)
HFpEFcon <- rm.missing(HFpEFnoInd, cut.off = CutOff)
HFpEFlist <- list(HFpEFind, HFpEFcon)
HFpEFmcar <- do.call(rbind, lapply(HFpEFlist, little.mcar))
HFpEFmcarNames <- c("indicator","continuous")
rownames(HFpEFmcar) <- HFpEFmcarNames
# ----------------------------------------------------------- #
# In HFmrEF
# ----------------------------------------------------------- #
CutOff <- 0.25 # cut.off percentage
HFmrEFind <- rm.missing(HFmrEFind, cut.off = CutOff,
near.zero.var = F)
HFmrEFcon <- rm.missing(HFmrEFnoInd, cut.off = CutOff)
HFmrEFlist <- list(HFmrEFind, HFmrEFcon)
HFmrEFmcar <- do.call(rbind, lapply(HFmrEFlist, little.mcar))
HFmrEFmcarNames <- c("indicator","continuous")
rownames(HFmrEFmcar) <- HFmrEFmcarNames
xtable(rbind(HFpEFmcar, HFmrEFmcar), digits = c(0,0,0,4,0,5))
# ----------------------------------------------------------- #
# Report missing data after removing variables
# ----------------------------------------------------------- #
top.n.missing(cbind(HFpEFcon, HFpEFind), n = 10)
top.n.missing(cbind(HFmrEFcon, HFmrEFind), n = 10)
# ----------------------------------------------------------- #
# Impute missing values
# ----------------------------------------------------------- #
# Impute the non-indicator variables with the Bootstrap
# EM algorithm.
# ----------------------------------------------------------- #
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEm <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEm <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind, method ="cart"))
HFpEFimp <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEFimp <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
HFpEFimp <- sort.column.names(HFpEFimp)
HFmrEFimp <- sort.column.names(HFmrEFimp)
save(HFpEFimp, file = "data_files/HFpEFimp.Rdat")
save(HFmrEFimp, file = "data_files/HFmrEFimp.Rdat")
View(HFmrEFimp)
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFimp", "HFmrEFimp")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEFimp)[-56,], cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEFimp), cor = T)
ncp <- 34; ncmr <- 31
tikz(file="../../../doc/thesis/images/pca_var_plot_HFpEF.tex",
width = 10, height = 9)
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFimp", "HFmrEFimp")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEFimp)[-56,], cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEFimp), cor = T)
ncp <- 34; ncmr <- 31
tikz(file="../../../doc/thesis/images/pca_var_plot_HFpEF.tex",
width = 10, height = 9)
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
dev.off()
tikz(file="../../../doc/thesis/images/pca_var_plot_HFmrEF.tex",
width = 10, height = 9)
pca.var.plot(HFmrEFpca, ncmr, title = "HFmrEF")
dev.off()
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
dev.off()
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
pca.var.plot(HFmrEFpca, ncmr, title = "HFmrEF")
pca.cluster.plot(HFpEFpca, ncp = ncp, km.clust = 3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = ncmr, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = ncmr, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 32, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 31, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 30, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 33, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 34, km.clust=2,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = mcmr, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = ncmr, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 30, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 32, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 32, km.clust=3,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 31, km.clust=3,hc.clust=2)
pca.cluster.plot(HFpEFpca, ncp = ncp, km.clust = 3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 25, km.clust=3,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 26, km.clust=3,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 27, km.clust=3,hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 27, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 28, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 29, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 31, km.clust=3,hc.clust=3)
NbClust(as.data.frame(HFpEFpca$scores[, 1:ncp]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:ncmr]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("BaylorEdPsych", "mvnmle", "xtable", "Amelia",
"rlist", "mice", "caret")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load indicator and non indicator variables
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFind", "HFmrEFind",
"HFpEFnoInd", "HFmrEFnoInd")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Little's test to assess for missing completely at random.
# Remove variables with more than a given cut.off missing
# values and that have near zero variance (not for indicator
# variables).
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
CutOff <- 0.15 # cut.off percentage
HFpEFind <- rm.missing(HFpEFind, cut.off = CutOff,
near.zero.var = F)
HFpEFcon <- rm.missing(HFpEFnoInd, cut.off = CutOff)
HFpEFlist <- list(HFpEFind, HFpEFcon)
HFpEFmcar <- do.call(rbind, lapply(HFpEFlist, little.mcar))
HFpEFmcarNames <- c("indicator","continuous")
rownames(HFpEFmcar) <- HFpEFmcarNames
# ----------------------------------------------------------- #
# In HFmrEF
# ----------------------------------------------------------- #
CutOff <- 0.25 # cut.off percentage
HFmrEFind <- rm.missing(HFmrEFind, cut.off = CutOff,
near.zero.var = F)
HFmrEFcon <- rm.missing(HFmrEFnoInd, cut.off = CutOff)
HFmrEFlist <- list(HFmrEFind, HFmrEFcon)
HFmrEFmcar <- do.call(rbind, lapply(HFmrEFlist, little.mcar))
HFmrEFmcarNames <- c("indicator","continuous")
rownames(HFmrEFmcar) <- HFmrEFmcarNames
xtable(rbind(HFpEFmcar, HFmrEFmcar), digits = c(0,0,0,4,0,5))
# ----------------------------------------------------------- #
# Report missing data after removing variables
# ----------------------------------------------------------- #
top.n.missing(cbind(HFpEFcon, HFpEFind), n = 10)
top.n.missing(cbind(HFmrEFcon, HFmrEFind), n = 10)
# ----------------------------------------------------------- #
# Impute missing values
# ----------------------------------------------------------- #
# Impute the non-indicator variables with the Bootstrap
# EM algorithm.
# ----------------------------------------------------------- #
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEm <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEm <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
# ----------------------------------------------------------- #
# Impute the indicator variables with classification and
# regression trees algorithm
# ----------------------------------------------------------- #
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind, method ="cart"))
# ----------------------------------------------------------- #
# Merge imputed data into one data file
# ----------------------------------------------------------- #
HFpEFimp <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEFimp <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
# ----------------------------------------------------------- #
# Sort column names
# ----------------------------------------------------------- #
HFpEFimp <- sort.column.names(HFpEFimp)
HFmrEFimp <- sort.column.names(HFmrEFimp)
# ----------------------------------------------------------- #
# Save the data files
# ----------------------------------------------------------- #
save(HFpEFimp, file = "data_files/HFpEFimp.Rdat")
save(HFmrEFimp, file = "data_files/HFmrEFimp.Rdat")
# ----------------------------------------------------------- #
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFimp", "HFmrEFimp")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEFimp)[-56,], cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEFimp), cor = T)
# ----------------------------------------------------------- #
# Explained variance plot
# ----------------------------------------------------------- #
ncp <- 34; ncmr <- 31
tikz(file="../../../doc/thesis/images/pca_var_plot_HFpEF.tex",
width = 10, height = 9)
pca.var.plot(HFpEFpca, ncp, title = "HFpEF")
dev.off()
tikz(file="../../../doc/thesis/images/pca_var_plot_HFmrEF.tex",
width = 10, height = 9)
pca.var.plot(HFmrEFpca, ncmr, title = "HFmrEF")
dev.off()
pca.cluster.plot(HFpEFpca, ncp = ncp, km.clust = 3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = 31, km.clust=3,hc.clust=3)
pca.cluster.plot(HFmrEFpca, ncp = ncmr, km.clust=2,hc.clust=2)
