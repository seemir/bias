load(file="data_files/HFfullImpDataSet.Rdat")
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,])
}
save(HFfullImpDataSet, file="data_files/HFfullImpDataSet.Rdat")
load(file="data_files/HFfullImpDataSet.Rdat")
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
pca.var.plot(HFfullpca, 41, title = "HF same variables")
NbClust(as.data.frame(HFfullpca$scores[, 1:41]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 2, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
clust <- pca.cluster.plot(HFfullpca, 41, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("BaylorEdPsych", "mvnmle", "xtable", "Amelia",
"rlist", "mice", "caret")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load indicator and non indicator variables
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFind", "HFmrEFind",
"HFpEFnoInd", "HFmrEFnoInd")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Little's test to assess for missing completely at random.
# Remove variables with more than a given cut.off missing
# values and that have near zero variance (not for indicator
# variables).
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
CutOff <- 0.15 # cut.off percentage
HFpEFind <- rm.missing(HFpEFind, cut.off = CutOff,
near.zero.var = F)
HFpEFcon <- rm.missing(HFpEFnoInd, cut.off = CutOff)
HFpEFlist <- list(HFpEFind, HFpEFcon)
HFpEFmcar <- do.call(rbind, lapply(HFpEFlist, little.mcar))
HFpEFmcarNames <- c("indicator","continuous")
rownames(HFpEFmcar) <- HFpEFmcarNames
# ----------------------------------------------------------- #
# In HFmrEF
# ----------------------------------------------------------- #
CutOff <- 0.25 # cut.off percentage
HFmrEFind <- rm.missing(HFmrEFind, cut.off = CutOff,
near.zero.var = F)
HFmrEFcon <- rm.missing(HFmrEFnoInd, cut.off = CutOff)
HFmrEFlist <- list(HFmrEFind, HFmrEFcon)
HFmrEFmcar <- do.call(rbind, lapply(HFmrEFlist, little.mcar))
HFmrEFmcarNames <- c("indicator","continuous")
rownames(HFmrEFmcar) <- HFmrEFmcarNames
xtable(rbind(HFpEFmcar, HFmrEFmcar), digits = c(0,0,0,4,0,5))
# ----------------------------------------------------------- #
# Report missing data after removing variables
# ----------------------------------------------------------- #
top.n.missing(cbind(HFpEFcon, HFpEFind), n = 10)
top.n.missing(cbind(HFmrEFcon, HFmrEFind), n = 10)
m <- 100 # number of bootstrap samples
HFpEFconImpEmList <- HFmrEFconImpEmList <- list()
HFpEFbound   <- data.bounds(HFpEFcon, 0, Inf)
HFmrEFbound   <- data.bounds(HFmrEFcon, 0, Inf)
HFpEFconImpEm <- boot.em.impute(HFpEFcon, bounds = HFpEFbound,
n.boot = m)
HFmrEFconImpEm <- boot.em.impute(HFmrEFcon,
bounds = HFmrEFbound,
n.boot = m)
# ----------------------------------------------------------- #
# Impute the indicator variables with classification and
# regression trees algorithm
# ----------------------------------------------------------- #
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind, method ="cart"))
# ----------------------------------------------------------- #
# Merge imputed data into one data file
# ----------------------------------------------------------- #
HFpEFimp <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEFimp <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
View(HFmrEFimp)
HFpEFimp <- sort.column.names(HFpEFimp, id.col = T)
HFmrEFimp <- sort.column.names(HFmrEFimp, id.col = T)
View(HFmrEFimp)
save(HFpEFimp, file = "data_files/HFpEFimp.Rdat")
save(HFmrEFimp, file = "data_files/HFmrEFimp.Rdat")
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEFimp", "HFmrEFimp")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
View(HFmrEFimp)
HFpEFpca <- princomp(as.matrix(HFpEFimp), cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEFimp), cor = T)
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 3,hc.clust=3,
em.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 2, km.clust=2, hc.clust=2,
em.clust = 2)
pca.cluster.plot(HFmrEFpca, ncp = 2, km.clust=3, hc.clust=3,
em.clust = 3)
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("Amelia", "mice", "NbClust")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
# ----------------------------------------------------------- #
# Load data set with same variables and source helper functions
# ----------------------------------------------------------- #
load("data_files/HFfullDataSet.Rdat")
load("data_files/SyndClass.Rdat")
source("utilities.R")
# ----------------------------------------------------------- #
# Summary of missing variables
# ----------------------------------------------------------- #
if(ncol(HFfullDataSet) == 55){
HFfullDataSet <- HFfullDataSet[,-1]
}
top.n.missing(HFfullDataSet, 10)
HFfullRmInd <- rm.indicator(HFfullDataSet, 8)
HFfullInd <- HFfullRmInd$indicator
HFfullNoInd <- HFfullRmInd$non.indicator
bnd <- data.bounds(HFfullNoInd, 0, Inf)
HFfullEm <- boot.em.impute(HFfullNoInd, bnd, n.boot = 30)
HFfullCart <- complete(mice(HFfullInd, method = "cart"))
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,])
}
save(HFfullImpDataSet, file="data_files/HFfullImpDataSet.Rdat")
load(file="data_files/HFfullImpDataSet.Rdat")
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
pca.var.plot(HFfullpca, 41, title = "HF same variables")
NbClust(as.data.frame(HFfullpca$scores[, 1:41]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 41, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
group <- clust$HC
dataSet <- cbind(group, HFfullImpDataSet[,-1])
compare.groups(dataSet, "group")
HFfullImpDataSet[,-1]
HFfullImpDataSet[,-1]
View(HFfullImpDataSet)
load(file="data_files/HFfullImpDataSet.Rdat")
View(HFfullImpDataSet)
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("Amelia", "mice", "NbClust")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
# ----------------------------------------------------------- #
# Load data set with same variables and source helper functions
# ----------------------------------------------------------- #
load("data_files/HFfullDataSet.Rdat")
load("data_files/SyndClass.Rdat")
source("utilities.R")
# ----------------------------------------------------------- #
# Summary of missing variables
# ----------------------------------------------------------- #
if(ncol(HFfullDataSet) == 55){
HFfullDataSet <- HFfullDataSet[,-1]
}
top.n.missing(HFfullDataSet, 10)
# ----------------------------------------------------------- #
# Split variables into indicator and categorical variables
# ----------------------------------------------------------- #
HFfullRmInd <- rm.indicator(HFfullDataSet, 8)
HFfullInd <- HFfullRmInd$indicator
HFfullNoInd <- HFfullRmInd$non.indicator
# ----------------------------------------------------------- #
# Impute data using Bootstrap EM and CART
# ----------------------------------------------------------- #
bnd <- data.bounds(HFfullNoInd, 0, Inf)
HFfullEm <- boot.em.impute(HFfullNoInd, bnd, n.boot = 30)
HFfullCart <- complete(mice(HFfullInd, method = "cart"))
# ----------------------------------------------------------- #
# Combine imputed data sets into one
# ----------------------------------------------------------- #
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
View(HFfullImpDataSet)
View(HFfullImpDataSet)
source("utilities.R")
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,])
}
View(HFfullImpDataSet)
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
View(HFfullImpDataSet)
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
View(HFfullImpDataSet)
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
source("utilities.R")
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
View(HFfullImpDataSet)
source("utilities.R")
sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
source("utilities.R")
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
source("utilities.R")
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
View(HFfullImpDataSet)
save(HFfullImpDataSet, file="data_files/HFfullImpDataSet.Rdat")
load(file="data_files/HFfullImpDataSet.Rdat")
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
pca.var.plot(HFfullpca, 41, title = "HF same variables")
pca.var.plot(HFfullpca, 40, title = "HF same variables")
pca.var.plot(HFfullpca, 41, title = "HF same variables")
NbClust(as.data.frame(HFfullpca$scores[, 1:41]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 41, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 2, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
group <- clust$HC
dataSet <- cbind(group, HFfullImpDataSet)
compare.groups(dataSet, "group")
source("utilities.R")
twogrps
?twogrps
source("utilities.R")
source("utilities.R")
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("Amelia", "mice", "NbClust")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
# ----------------------------------------------------------- #
# Load data set with same variables and source helper functions
# ----------------------------------------------------------- #
load("data_files/HFfullDataSet.Rdat")
load("data_files/SyndClass.Rdat")
source("utilities.R")
# ----------------------------------------------------------- #
# Summary of missing variables
# ----------------------------------------------------------- #
if(ncol(HFfullDataSet) == 55){
HFfullDataSet <- HFfullDataSet[,-1]
}
top.n.missing(HFfullDataSet, 10)
# ----------------------------------------------------------- #
# Split variables into indicator and categorical variables
# ----------------------------------------------------------- #
HFfullRmInd <- rm.indicator(HFfullDataSet, 8)
HFfullInd <- HFfullRmInd$indicator
HFfullNoInd <- HFfullRmInd$non.indicator
# ----------------------------------------------------------- #
# Impute data using Bootstrap EM and CART
# ----------------------------------------------------------- #
bnd <- data.bounds(HFfullNoInd, 0, Inf)
HFfullEm <- boot.em.impute(HFfullNoInd, bnd, n.boot = 30)
HFfullCart <- complete(mice(HFfullInd, method = "cart"))
# ----------------------------------------------------------- #
# Combine imputed data sets into one
# ----------------------------------------------------------- #
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
# ----------------------------------------------------------- #
# Sort columns and remove 328 outlier
# ----------------------------------------------------------- #
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
save(HFfullImpDataSet, file="data_files/HFfullImpDataSet.Rdat")
load(file="data_files/HFfullImpDataSet.Rdat")
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
pca.var.plot(HFfullpca, 41, title = "HF same variables")
pca.var.plot(HFfullpca, 41, title = "HF same variables")
NbClust(as.data.frame(HFfullpca$scores[, 1:41]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 41, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
acGroup <- clust$act
dataSet <- cbind(acGroup, HFfullImpDataSet)
compare.baseline(dataSet, "acGroup")
acGroup <- clust$act
acGroup
acGroup <- clust$ACT
dataSet <- cbind(acGroup, HFfullImpDataSet)
compare.baseline(dataSet, "acGroup")
kMgroup <- clust$HC
dataSet <- cbind(kMgroup, HFfullEm)
compare.groups(dataSet, "kMgroup")
acGroup <- clust$ACT
dataSet <- cbind(acGroup, HFfullEm)
compare.baseline(dataSet, "acGroup")
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("Amelia", "mice", "NbClust")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
# ----------------------------------------------------------- #
# Load data set with same variables and source helper functions
# ----------------------------------------------------------- #
load("data_files/HFfullDataSet.Rdat")
load("data_files/SyndClass.Rdat")
source("utilities.R")
# ----------------------------------------------------------- #
# Summary of missing variables
# ----------------------------------------------------------- #
if(ncol(HFfullDataSet) == 55){
HFfullDataSet <- HFfullDataSet[,-1]
}
top.n.missing(HFfullDataSet, 10)
# ----------------------------------------------------------- #
# Split variables into indicator and categorical variables
# ----------------------------------------------------------- #
HFfullRmInd <- rm.indicator(HFfullDataSet, 8)
HFfullInd <- HFfullRmInd$indicator
HFfullNoInd <- HFfullRmInd$non.indicator
# ----------------------------------------------------------- #
# Impute data using Bootstrap EM and CART
# ----------------------------------------------------------- #
bnd <- data.bounds(HFfullNoInd, 0, Inf)
HFfullEm <- boot.em.impute(HFfullNoInd, bnd, n.boot = 30)
HFfullCart <- complete(mice(HFfullInd, method = "cart"))
# ----------------------------------------------------------- #
# Combine imputed data sets into one
# ----------------------------------------------------------- #
HFfullImpDataSet <- cbind(HFfullEm, HFfullCart)
# ----------------------------------------------------------- #
# Sort columns and remove 328 outlier
# ----------------------------------------------------------- #
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet,
id.col = F)
}
save(HFfullImpDataSet, file="data_files/HFfullImpDataSet.Rdat")
load(file="data_files/HFfullImpDataSet.Rdat")
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
pca.var.plot(HFfullpca, 41, title = "HF same variables")
pca.var.plot(HFfullpca, 41, title = "HF same variables")
act <- SyndClass[, 2]
clust <- pca.cluster.plot(HFfullpca, 41, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
if(nrow(HFfullImpDataSet) == 375){
HFfullImpDataSet<-sort.column.names(HFfullImpDataSet[-328,],
id.col = F)
}
# ----------------------------------------------------------- #
# Save full data set
# ----------------------------------------------------------- #
save(HFfullImpDataSet, file="data_files/HFfullImpDataSet.Rdat")
load(file="data_files/HFfullImpDataSet.Rdat")
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFfullpca <- princomp(HFfullImpDataSet, cor = T)
# ----------------------------------------------------------- #
# Explained variance
# ----------------------------------------------------------- #
pca.var.plot(HFfullpca, 41, title = "HF same variables")
# ----------------------------------------------------------- #
# Actual clustering configuration
# ----------------------------------------------------------- #
act <- SyndClass[, 2]
clust <- pca.cluster.plot(HFfullpca, 42, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
View(HFfullEm)
pca.var.plot(HFfullpca, 20, title = "HF same variables")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 20, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 15, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 30, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
pca.var.plot(HFfullpca, 30, title = "HF same variables")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 34, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
pca.var.plot(HFfullpca, 36, title = "HF same variables")
pca.var.plot(HFfullpca, 35, title = "HF same variables")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 35, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
View(HFfullEm)
acGroup <- clust$ACT
dataSet <- cbind(acGroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "acGroup")
dataSet <- cbind(acGroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "acGroup")
acGroup <- clust$ACT
dataSet <- cbind(acGroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "acGroup")
hCgroup <- clust$HC
dataSet <- cbind(acGroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "hCgroup")
hCgroup <- clust$HC
dataSet <- cbind(acGroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
View(dataSet)
hCgroup <- clust$HC
dataSet <- cbind(hCGroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "hCgroup")
hCgroup <- clust$HC
dataSet <- cbind(hCgroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "hCgroup")
kMgroup <- clust$KM
dataSet <- cbind(kMgroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.groups(dataSet, "kMgroup")
kMgroup <- clust$KM
dataSet <- cbind(kMgroup, if(ncol(HFfullEm==27)){
HFfullEm[-328,-4]})
compare.baseline(dataSet, "kMgroup")
clust <- pca.cluster.plot(HFfullpca, 35, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = T, actual = act,
return.clust = T)
pca.var.plot(HFfullpca, 2, title = "HF same variables")
act <- SyndClass[-328, 2]
clust <- pca.cluster.plot(HFfullpca, 2, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = T, actual = act,
return.clust = T)
clust <- pca.cluster.plot(HFfullpca, 2, hc.clust = 2,
km.clust = 2, em.clust = 2,
ellipse = F, actual = act,
return.clust = T)
