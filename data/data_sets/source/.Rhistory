# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEF", "HFmrEF")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEF), cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEF), cor = T)
# ----------------------------------------------------------- #
# Explained variance plot
# ----------------------------------------------------------- #
tikz(file="../../../doc/thesis/images/pca_var_plot_HFpEF.tex",
width = 10, height = 9)
pca.var.plot(HFpEFpca, 56, title = "HFpEF")
dev.off()
tikz(file="../../../doc/thesis/images/pca_var_plot_HFmrEF.tex",
width = 10, height = 9)
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
dev.off()
# ----------------------------------------------------------- #
# Optimal number of clusters
# ----------------------------------------------------------- #
# In HFpEF
# ----------------------------------------------------------- #
NbClust(as.data.frame(HFpEFpca$scores[, 1:56]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
dev.off()
tikz(file="../../../doc/thesis/images/pca_var_plot_HFpEF.tex",
width = 10, height = 9)
pca.var.plot(HFpEFpca, 56, title = "HFpEF")
dev.off()
tikz(file="../../../doc/thesis/images/pca_var_plot_HFmrEF.tex",
width = 10, height = 9)
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
dev.off()
NbClust(as.data.frame(HFpEFpca$scores[, 1:56]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:46]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.var.plot(HFpEFpca, 56, title = "HFpEF")
pca.var.plot(HFpEFpca, 56, title = "HFpEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
pca.cluster.plot(HFpEFpca, ncp = 56, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 54, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 56, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 58, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 59, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 61, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 60, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 62, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 63, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 65, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 66, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 68, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 70, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 71, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 71, km.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 47)
pca.cluster.plot(HFmrEFpca, ncp = 48)
pca.cluster.plot(HFmrEFpca, ncp = 49)
pca.cluster.plot(HFmrEFpca, ncp = 51)
pca.cluster.plot(HFmrEFpca, ncp = 52)
pca.cluster.plot(HFmrEFpca, ncp = 2)
pca.cluster.plot(HFmrEFpca, ncp = 3)
pca.cluster.plot(HFmrEFpca, ncp = 4)
pca.cluster.plot(HFmrEFpca, ncp = 5)
pca.cluster.plot(HFmrEFpca, ncp = 6)
pca.cluster.plot(HFmrEFpca, ncp = 7)
pca.cluster.plot(HFmrEFpca, ncp = 8)
pca.cluster.plot(HFpEFpca, ncp = 8)
pca.cluster.plot(HFpEFpca, ncp = 15)
pca.cluster.plot(HFmrEFpca, ncp = 15)
pca.cluster.plot(HFmrEFpca, ncp = 30)
pca.cluster.plot(HFmrEFpca, ncp = 31)
m <- 30 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
m <- 5 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
for (i in 1:m){
print(paste("Bootstrap: ", i, " (", i/m*100," %)",sep =""))
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
boot.type = "none",
bounds = HFpEFconFirstBound)
# HFpEFconImpEmlis[[i]] <-  list.cbind(lapply(lapply(lapply(
#   HFpEFlis[2:3], amelia, m = 1, boot.type="none", p2s = 0),
#   "[[", 1), "[[", 1))
# HFmrEFconImpEmlis[[i]] <- list.cbind(lapply(lapply(lapply(
#   HFmrEFlis[2:3], amelia, m = 1, boot.type="none", p2s = 0),
#   "[[", 1), "[[", 1))
}
m <- 1 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
for (i in 1:m){
print(paste("Bootstrap: ", i, " (", i/m*100," %)",sep =""))
HFpEFfirstEM <- lapply(lapply(amelia(HFpEFconFirstHalf,
m = 1, p2s = 0, boot.type = "none",
bounds = HFpEFconFirstBound),"[[", 1),
"[[", 1)
print(HFpEFfirstEM)
# HFpEFconImpEmlis[[i]] <-  list.cbind(lapply(lapply(lapply(
#   HFpEFlis[2:3], amelia, m = 1, boot.type="none", p2s = 0),
#   "[[", 1), "[[", 1))
# HFmrEFconImpEmlis[[i]] <- list.cbind(lapply(lapply(lapply(
#   HFmrEFlis[2:3], amelia, m = 1, boot.type="none", p2s = 0),
#   "[[", 1), "[[", 1))
}
HFpEFfirstEM <- lapply(lapply(amelia(HFpEFconFirstHalf,
m = 1, p2s = 0, boot.type = "none",
bounds = HFpEFconFirstBound),"[[", 1),
"[[", 1)
print(HFpEFfirstEM)
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
boot.type = "none",
bounds = HFpEFconFirstBound)
HFpEFfirstEM
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
boot.type = "none",
bounds = HFpEFconFirstBound)$imputations$imp1
HFpEFfirstEM
HFpEFsecondEM <-amelia(HFpEFconSecondHalf, m = 1, p2s = 0,
boot.type = "none",
bounds = HFpEFconSecondBound)$imputations$imp1
HFpEFsecondEM
View(HFpEFfirstEM)
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
bounds = HFpEFconFirstBound)$imputations$imp1
HFpEFfirstEM
m <- 1 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
HFmrEFconFirstBound <- data.bounds(HFmrEFconFirstHalf, 0, Inf)
HFmrEFconSecondBound<-data.bounds(HFmrEFconSecondHalf, 0, Inf)
for (i in 1:m){
print(paste("Bootstrap: ", i, " (", i/m*100," %)",sep =""))
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
bounds = HFpEFconFirstBound)$imputations$imp1
HFpEFsecondEM <-amelia(HFpEFconSecondHalf, m = 1, p2s = 0,
bounds = HFpEFconSecondBound)$imputations$imp1
HFmrEFfirstEM <-amelia(HFmrEFconFirstHalf, m = 1, p2s = 0,
bounds = HFmrEFconFirstBound)$imputations$imp1
HFmrEFsecondEM<-amelia(HFmrEFconSecondHalf, m = 1, p2s = 0,
bounds = HFmrEFconSecondBound)$imputations$imp1
HFpEFconImpEmlis[[1]] <- cbind(HFpEFfirstEM, HFpEFsecondEM)
HFmrEFconImpEmlis[[1]] <- cbind(HFmrEFfirstEM, HFmrEFsecondEM)
}
m <- 2 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
HFmrEFconFirstBound <- data.bounds(HFmrEFconFirstHalf, 0, Inf)
HFmrEFconSecondBound<-data.bounds(HFmrEFconSecondHalf, 0, Inf)
for (i in 1:m){
print(paste("Bootstrap: ", i, " (", i/m*100," %)",sep =""))
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
bounds = HFpEFconFirstBound)$imputations$imp1
HFpEFsecondEM <-amelia(HFpEFconSecondHalf, m = 1, p2s = 0,
bounds = HFpEFconSecondBound)$imputations$imp1
HFmrEFfirstEM <-amelia(HFmrEFconFirstHalf, m = 1, p2s = 0,
bounds = HFmrEFconFirstBound)$imputations$imp1
HFmrEFsecondEM<-amelia(HFmrEFconSecondHalf, m = 1, p2s = 0,
bounds = HFmrEFconSecondBound)$imputations$imp1
HFpEFconImpEmlis[[1]] <- cbind(HFpEFfirstEM, HFpEFsecondEM)
HFmrEFconImpEmlis[[1]] <- cbind(HFmrEFfirstEM, HFmrEFsecondEM)
}
m <- 5 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
HFmrEFconFirstBound <- data.bounds(HFmrEFconFirstHalf, 0, Inf)
HFmrEFconSecondBound<-data.bounds(HFmrEFconSecondHalf, 0, Inf)
for (i in 1:m){
print(paste("Bootstrap: ", i, " (", i/m*100," %)",sep =""))
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
bounds = HFpEFconFirstBound)$imputations$imp1
HFpEFsecondEM <-amelia(HFpEFconSecondHalf, m = 1, p2s = 0,
bounds = HFpEFconSecondBound)$imputations$imp1
HFmrEFfirstEM <-amelia(HFmrEFconFirstHalf, m = 1, p2s = 0,
bounds = HFmrEFconFirstBound)$imputations$imp1
HFmrEFsecondEM<-amelia(HFmrEFconSecondHalf, m = 1, p2s = 0,
bounds = HFmrEFconSecondBound)$imputations$imp1
HFpEFconImpEmlis[[i]] <- cbind(HFpEFfirstEM, HFpEFsecondEM)
HFmrEFconImpEmlis[[i]] <- cbind(HFmrEFfirstEM, HFmrEFsecondEM)
}
HFpEFconImpEm <- Reduce("+", HFpEFconImpEmlis) / m
HFmrEFconImpEm <- Reduce("+", HFmrEFconImpEmlis) / m
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind,method ="cart"))
HFpEF <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEF <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
save(HFpEF, file = "data_files/HFpEF.Rdat")
save(HFmrEF, file = "data_files/HFmrEF.Rdat")
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEF", "HFmrEF")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
HFpEFpca <- princomp(as.matrix(HFpEF), cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEF), cor = T)
pca.var.plot(HFpEFpca, 56, title = "HFpEF")
pca.var.plot(HFpEFpca, 57, title = "HFpEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 46, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:57]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:46]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:47]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 56)
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 3,hc.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 47)
pca.cluster.plot(HFmrEFpca, ncp = 48)
pca.cluster.plot(HFmrEFpca, ncp = 49)
pca.cluster.plot(HFmrEFpca, ncp = 50)
m <- 30 # number of bootstrap samples
HFpEFconImpEmlis <- list()
HFmrEFconImpEmlis <- list()
HFpEFconFirstBound <- data.bounds(HFpEFconFirstHalf, 0, Inf)
HFpEFconSecondBound <- data.bounds(HFpEFconSecondHalf, 0, Inf)
HFmrEFconFirstBound <- data.bounds(HFmrEFconFirstHalf, 0, Inf)
HFmrEFconSecondBound<-data.bounds(HFmrEFconSecondHalf, 0, Inf)
for (i in 1:m){
print(paste("Bootstrap: ", i, " (", i/m*100," %)",sep =""))
HFpEFfirstEM <- amelia(HFpEFconFirstHalf, m = 1, p2s = 0,
bounds = HFpEFconFirstBound)$imputations$imp1
HFpEFsecondEM <-amelia(HFpEFconSecondHalf, m = 1, p2s = 0,
bounds = HFpEFconSecondBound)$imputations$imp1
HFmrEFfirstEM <-amelia(HFmrEFconFirstHalf, m = 1, p2s = 0,
bounds = HFmrEFconFirstBound)$imputations$imp1
HFmrEFsecondEM<-amelia(HFmrEFconSecondHalf, m = 1, p2s = 0,
bounds = HFmrEFconSecondBound)$imputations$imp1
HFpEFconImpEmlis[[i]] <- cbind(HFpEFfirstEM, HFpEFsecondEM)
HFmrEFconImpEmlis[[i]]<-cbind(HFmrEFfirstEM, HFmrEFsecondEM)
}
HFpEFconImpEm <- Reduce("+", HFpEFconImpEmlis) / m
HFmrEFconImpEm <- Reduce("+", HFmrEFconImpEmlis) / m
HFpEFindImpCart <- complete(mice(HFpEFind, method ="cart"))
HFmrEFindImpCart <- complete(mice(HFmrEFind,method ="cart"))
HFpEF <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEF <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
View(HFmrEF)
HFpEF <- cbind(HFpEFconImpEm, HFpEFindImpCart)
HFmrEF <- cbind(HFmrEFconImpEm, HFmrEFindImpCart)
# ----------------------------------------------------------- #
# Save the data files
# ----------------------------------------------------------- #
save(HFpEF, file = "data_files/HFpEF.Rdat")
save(HFmrEF, file = "data_files/HFmrEF.Rdat")
# ----------------------------------------------------------- #
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEF", "HFmrEF")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEF), cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEF), cor = T)
pca.var.plot(HFpEFpca, 57, title = "HFpEF")
pca.var.plot(HFpEFpca, 56, title = "HFpEF")
pca.var.plot(HFpEFpca, 57, title = "HFpEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 46, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:57]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:47]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 57,km.clust = 3,hc.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 50)
pca.cluster.plot(HFmrEFpca, ncp = 47)
pca.cluster.plot(HFpEFpca, ncp = 57,km.clust = 3,hc.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 57,km.clust = 2,hc.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 4, hc.clust = 4)
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 4, hc.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 4, hc.clust = 2)
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 3, hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 2, hc.clust =3)
NbClust(as.data.frame(HFpEFpca$scores[, 1:57]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 15, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 20, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 30, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 40, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 41, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 42, km.clust = 3, hc.clust =3)
pca.cluster.plot(HFpEFpca, ncp = 41, km.clust = 3, hc.clust =2)
NbClust(as.data.frame(HFmrEFpca$scores[, 1:47]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 30, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 35, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 40, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 45, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 44, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 50, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 51, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 53, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 54, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 3, hc.clust =2)
pca.cluster.plot(HFmrEFpca, ncp = 2, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 2, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 47, km.clust = 4, hc.clust=2)
pca.var.plot(HFpEFpca, 57, title = "HFpEF")
pca.var.plot(HFpEFpca, 57, title = "HFpEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:57]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 3, hc.clust =2)
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 56, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 40, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 41, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 42, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 41, km.clust = 3)
pca.var.plot(HFpEFpca, 15, title = "HFpEF")
pca.var.plot(HFpEFpca, 15, title = "HFpEF")
pca.var.plot(HFmrEFpca, 15, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 10, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 13, title = "HFmrEF")
pca.var.plot(HFpEFpca, 15, title = "HFpEF")
pca.var.plot(HFpEFpca, 14, title = "HFpEF")
pca.var.plot(HFpEFpca, 15, title = "HFpEF")
pca.var.plot(HFmrEFpca, 13, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 12, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 13, title = "HFmrEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:15]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:13]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 15, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 15, km.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 16, km.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 16, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 17, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 18, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 19, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 20, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 21, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 22, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 23, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 24, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 25, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 26, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 3, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 4, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 5, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 6, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 7, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 3)
pca.cluster.plot(HFmrEFpca, ncp = 2, km.clust = 4, hc.clust=2)
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 3)
# ----------------------------------------------------------- #
# Install packages (if not already installed)
# ----------------------------------------------------------- #
Packages <- c("tikzDevice")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load package for docstring
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("_helper_func.R")
# ----------------------------------------------------------- #
# Load imputed data
# ----------------------------------------------------------- #
allDataFiles <- c("HFpEF", "HFmrEF")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Principal component analysis
# ----------------------------------------------------------- #
HFpEFpca <- princomp(as.matrix(HFpEF), cor = T)
HFmrEFpca <- princomp(as.matrix(HFmrEF), cor = T)
pca.var.plot(HFpEFpca, 15, title = "HFpEF")
pca.var.plot(HFpEFpca, 47, title = "HFpEF")
pca.var.plot(HFpEFpca, 48, title = "HFpEF")
pca.var.plot(HFpEFpca, 57, title = "HFpEF")
pca.var.plot(HFmrEFpca, 13, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 49, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 48, title = "HFmrEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:57]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:48]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.var.plot(HFmrEFpca, 48, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 48, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 47, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 48, title = "HFmrEF")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:48]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 2, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 57, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 58, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 59, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 60, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 61, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 65, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 66, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 67, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 68, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 65, km.clust = 3)
pca.cluster.plot(HFpEFpca, ncp = 65, km.clust = 3, hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 65, km.clust = 3,hc.clust = 2)
NbClust(as.data.frame(HFpEFpca$scores[, 1:65]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.var.plot(HFpEFpca, 86, title = "HFpEF")
pca.var.plot(HFpEFpca, 86, title = "HFpEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:86]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
NbClust(as.data.frame(HFpEFpca$scores[, 1:85]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 85,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 65,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 61,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 62,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 63,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 64,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 65,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 66,km.clust = 3,hc.clust = 2)
NbClust(as.data.frame(HFpEFpca$scores[, 1:66]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.var.plot(HFpEFpca, 66, title = "HFpEF")
pca.var.plot(HFpEFpca, 66, title = "HFpEF")
pca.cluster.plot(HFmrEFpca, ncp = 56, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 55, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 54, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 57, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 53, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 50, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 51, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 52, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFmrEFpca, ncp = 54, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFpEFpca, ncp = 66,km.clust = 3,hc.clust = 2)
pca.var.plot(HFpEFpca, 66, title = "HFpEF")
NbClust(as.data.frame(HFpEFpca$scores[, 1:66]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFpEFpca, ncp = 66,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 66,km.clust = 2,hc.clust = 2)
pca.cluster.plot(HFpEFpca, ncp = 66,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFmrEFpca, ncp = 54, km.clust = 3, hc.clust=2)
pca.cluster.plot(HFpEFpca, ncp = 66,km.clust = 3,hc.clust = 2)
pca.cluster.plot(HFmrEFpca, ncp = 54, km.clust = 3, hc.clust=2)
pca.var.plot(HFmrEFpca, 54, title = "HFmrEF")
pca.var.plot(HFmrEFpca, 54, title = "HFmrEF")
NbClust(as.data.frame(HFmrEFpca$scores[, 1:54]),
distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
pca.cluster.plot(HFmrEFpca, ncp = 54, km.clust = 2, hc.clust=2)
