# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("mlbench", "caret", "elasticnet")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load data files
# ----------------------------------------------------------- #
allDataFiles <- c("HFfullImp", "HFfullOutcomes")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
# ----------------------------------------------------------- #
# Add cross validation configuration
# ----------------------------------------------------------- #
kfold <- trainControl(method = "cv", number = 10)
loocv <- trainControl(method = "LOOCV")
seed <- 90210; metric <- "Accuracy"
dataset <- HFfullImp[,-1]
mortality <- HFfullOutcomes[,3]
readmission <- HFfullOutcomes[,4]
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold, fit = F)
fitRfKfold <- train(mortality.~, data = dataset, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
fitRfKfold <- train(mortality~., data = dataset, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
fitRfKfold
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
fitKnnLoocv <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=loocv)
fitSvmLoocv <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=loocv, fit = F)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
resultsMortalityLoocv <- resamples(list(knn = fitKnnLoocv,
svm = fitSvmLoocv))
fitRfLoocv <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = loocv)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, preProcess = "pca",
trControl = kfold)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
apha = 1, family = "binomial",
metric = metric, preProcess = "pca",
trControl = kfold)
train
fitLassoKfold <- train(dataset, mortality, method = "lasso",
apha = 1, family = "binomial",
metric = metric, trControl = kfold)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, trControl = kfold)
kfold <- trainControl(method = "cv", number = 10,
returnResamp = "all")
loocv <- trainControl(method = "LOOCV")
seed <- 90210; metric <- "Accuracy"
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold, fit = F)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, preProcess = "pca",
trControl = kfold)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, trControl = kfold)
train
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, trControl = kfold)
fitKnnLoocv <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=loocv)
fitSvmLoocv <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=loocv, fit = F)
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold, returnResamp="final")
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold)
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold, tuneLength = "random")
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold, fit = F)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=kfold, fit = F)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = kfold)
fitKnnLoocv <- train(dataset, mortality, method="knn",
metric=metric, preProc="pca",
trControl=loocv)
fitKnnLoocv
fitSvmLoocv <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc="pca",
trControl=loocv)
fitSvmLoocv
fitRfLoocv <- train(dataset, mortality, method="rf",
metric = metric, preProcess = "pca",
trControl = loocv)
preProcess <- c("centering", "scaling")
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc=preProcess,
trControl=kfold, fit = F)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProc=preProcess,
trControl = kfold)
preProcess <- c("center", "scale")
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold)
fitKnnKfold <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold)
fitSvmKfold <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc=preProcess,
trControl=kfold, fit = F)
fitRfKfold <- train(dataset, mortality, method="rf",
metric = metric, preProc=preProcess,
trControl = kfold)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, preProc=preProcess,
trControl = kfold)
fitLassoKfold <- train(dataset, mortality, method = "lasso",
metric = metric, preProc=preProcess,
family = "binomial", alpha = 1,
trControl = kfold)
fitKnnLoocv <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=loocv)
fitSvmLoocv <- train(dataset, mortality, method="svmRadial",
metric=metric, preProc=preProcess,
trControl=loocv)
fitKnnLoocv
fitSvmLoocv
fitRfLoocv
fitRfLoocv <- train(dataset, mortality, method="rf",
metric = metric, preProc = preProcess,
trControl = loocv)
fitRfLoocv
resultsMortalityKfold <- resamples(list(knn = fitKnnKfold,
svm = fitSvmKfold,
rf = fitRfKfold))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
resultsMortalityLoocv <- resamples(list(knn = fitKnnLoocv,
svm = fitSvmLoocv,
rf = fitRfLoocv))
summary(resultsMortalityLoocv); dotplot(resultsMortalityLoocv)
fitRfLoocv
fitSvmLoocv
fitKnnLoocv
fitKnnKfoldReadm <- train(dataset, readmission, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold)
fitSvmKfoldReadm <- train(dataset, readmission,
method="svmRadial", metric=metric,
preProc=preProcess, trControl=kfold,
fit = F)
fitRfKfoldReadm <- train(dataset, readmission, method="rf",
metric = metric, preProc=preProcess,
trControl = kfold)
resultsReadmKfold <- resamples(list(knn = fitKnnKfoldReadm,
svm = fitSvmKfoldReadm,
rf = fitRfKfoldReadm))
summary(resultsReadmKfold)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
Packages <- c("mlbench", "caret", "elasticnet")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = TRUE)
source("utilities.R")
# ----------------------------------------------------------- #
# Load data files
# ----------------------------------------------------------- #
allDataFiles <- c("HFfullImp", "HFfullOutcomes")
lapply(gsub(" ", "", paste("data_files/", allDataFiles,
".Rdat")), load,.GlobalEnv)
kfold <- trainControl(method = "cv", number = 10,
returnResamp = "all")
loocv <- trainControl(method = "LOOCV")
seed <- 90210; metric <- "Accuracy"
dataset <- HFfullImp[,-1]
mortality <- HFfullOutcomes[,3]
readmission <- HFfullOutcomes[,4]
fitKnnKfoldMort <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold)
fitKnnKfoldMort <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold, fit = F)
fitKnnKfoldMort <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold, fit = F,
preProcess = "pca")
fitKnnKfoldMort <- train(dataset, mortality, method="knn",
metric=metric, preProc=preProcess,
trControl=kfold, preProcess = "pca")
fitKnnKfoldMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=kfold)
fitSvmKfoldMort <- train(dataset, mortality,method="svmRadial",
metric=metric, trControl=kfold)
fitKnnKfoldMort
fitSvmKfoldMort
fitRfKfoldMort <- train(dataset, mortality, method="rf",
metric = metric, trControl = kfold)
fitRfKfoldMort
fitKnnLoocvMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=loocv)
fitSvmLoocvMort <- train(dataset, mortality,method="svmRadial",
metric=metric, trControl=loocv)
fitSvmLoocvMort
fitRfLoocvMort <- train(dataset, mortality, method="rf",
metric = metric, trControl = loocv)
resultsMortalityLoocv <- resamples(list(knn = fitKnnLoocv,
svm = fitSvmLoocv,
rf = fitRfLoocv))
resultsMortalityKfold <- resamples(list(knn = fitKnnKfoldMort,
svm = fitSvmKfoldMort,
rf = fitRfKfoldMort))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
resultsMortalityLoocv <- resamples(list(knn = fitKnnLoocv,
svm = fitSvmLoocv,
rf = fitRfLoocv))
resultsMortalityLoocv <- resamples(list(knn = fitKnnLoocvMort,
svm = fitSvmLoocvMort,
rf = fitRfLoocvMort))
summary(resultsMortalityLoocv); dotplot(resultsMortalityLoocv)
fitKnnKfoldReadm <- train(dataset, readmission, method="knn",
metric=metric, trControl=kfold)
fitSvmKfoldReadm <- train(dataset, readmission,
method="svmRadial", metric=metric,
trControl=kfold)
fitRfKfoldReadm <- train(dataset, readmission, method="rf",
metric = metric, preProc=preProcess,
trControl = kfold)
fitRfKfoldReadm <- train(dataset, readmission, method="rf",
metric = metric, trControl = kfold)
resultsReadmKfold <- resamples(list(knn = fitKnnKfoldReadm,
svm = fitSvmKfoldReadm,
rf = fitRfKfoldReadm))
summary(resultsReadmKfold); dotplot(resultsMortalityKfold)
summary(resultsReadmKfold); dotplot(resultsReadmKfold)
fitKnnLoocvReadm <- train(dataset, readmission, method="knn",
metric=metric, trControl=loocv)
fitKnnLoocvReadm
fitSvmLoocvReadm <- train(dataset, readmission,
method="svmRadial", metric=metric,
trControl=loocv)
fitSvmLoocvReadm
fitRfLoocvReadm <- train(dataset, readmission, method="rf",
metric = metric, trControl = loocv)
resultsReadmKfold <- resamples(list(knn = fitKnnKfoldReadm,
svm = fitSvmKfoldReadm,
rf = fitRfKfoldReadm))
summary(resultsReadmKfold); dotplot(resultsReadmKfold)
resultsReadmLoocv <- resamples(list(knn = fitKnnLoocvReadm,
svm = fitSvmLoocvReadm,
rf = fitRfLoocvReadm))
summary(resultsReadmKfold); dotplot(resultsReadmKfold)
summary(resultsReadmLoocv); dotplot(resultsReadmLoocv)
resultsReadmLoocv
resultsMortalityKfold <- resamples(list(knn = fitKnnKfoldMort,
svm = fitSvmKfoldMort,
rf = fitRfKfoldMort))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
loocv <- trainControl(method = "cv", number = 1)
seed <- 90210; metric <- "Accuracy"
dataset <- HFfullImp[,-1]
mortality <- HFfullOutcomes[,3]
readmission <- HFfullOutcomes[,4]
fitKnnKfoldMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=kfold)
fitSvmKfoldMort <- train(dataset, mortality,method="svmRadial",
metric=metric, trControl=kfold)
fitRfKfoldMort <- train(dataset, mortality, method="rf",
metric = metric, trControl = kfold)
fitKnnLoocvMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=loocv)
fitSvmLoocvMort <- train(dataset, mortality,method="svmRadial",
metric=metric, trControl=loocv)
fitRfLoocvMort <- train(dataset, mortality, method="rf",
metric = metric, trControl = loocv)
fitKnnLoocvMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=loocv)
fitKnnLoocvMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=loocv)
loocv <- trainControl(method = "LOOCV")
fitKnnLoocvMort <- train(dataset, mortality, method="knn",
metric=metric, trControl=loocv)
fitSvmLoocvMort <- train(dataset, mortality,method="svmRadial",
metric=metric, trControl=loocv)
fitRfLoocvMort <- train(dataset, mortality, method="rf",
metric = metric, trControl = loocv)
resultsMortalityKfold <- resamples(list(knn = fitKnnKfoldMort,
svm = fitSvmKfoldMort,
rf = fitRfKfoldMort))
summary(resultsMortalityKfold); dotplot(resultsMortalityKfold)
resultsMortalityLoocv <- resamples(list(knn = fitKnnLoocvMort,
svm = fitSvmLoocvMort,
rf = fitRfLoocvMort))
summary(resultsMortalityLoocv); dotplot(resultsMortalityLoocv)
fitKnnKfoldReadm <- train(dataset, readmission, method="knn",
metric=metric, trControl=kfold)
fitSvmKfoldReadm <- train(dataset, readmission,
method="svmRadial", metric=metric,
trControl=kfold)
fitRfKfoldReadm <- train(dataset, readmission, method="rf",
metric = metric, trControl = kfold)
resultsReadmKfold <- resamples(list(knn = fitKnnKfoldReadm,
svm = fitSvmKfoldReadm,
rf = fitRfKfoldReadm))
summary(resultsReadmKfold); dotplot(resultsReadmKfold)
