colnames(HFmrEF_matrix)[3]
if(colnames(HFmrEF_matrix)[3] == "af"){
colnames(HFmrEF_matrix[,3]) <- "afib"
}
colnames(HFmrEF_matrix)[3]
colnames(HFmrEF_matrix)[3] == "af"
colnames(HFmrEF_matrix[,3])
colnames(HFmrEF_matrix[,3]) <- "afib"
View(HFmrEF_matrix)
colnames(HFmrEF_matrix)[which(names(HFmrEF_matrix) == "af")]
which(names(HFmrEF_matrix) == "af")
which(colnames(HFmrEF_matrix) == "af")
colnames(HFmrEF_matrix)[which(colnames(HFmrEF_matrix) == "af")]
names(HFmrEF_matrix)
colnames(HFmrEF_matrix[,3])=="af"
colnames(HFmrEF_matrix[,3])
colnames(HFmrEF_matrix)[3]=="af"
if(colnames(HFmrEF_matrix)[3]=="af"){
name(HFmrEF_matrix[,3]) <- "afib"
}
if(colnames(HFmrEF_matrix)[3]=="af"){
names(HFmrEF_matrix[,3]) <- "afib"
}
View(HFmrEF_matrix)
HFmrEF_matrix)[c(3,5)]==c("af", "ar")
colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar")
all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
}
View(HFmrEF_matrix)
all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
View(HFmrEF_matrix)
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
}
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
View(HFmrEF_matrix)
HFmrEF_matrix[,c(3,5)
HFmrEF_matrix[,c(3,5)]
HFmrEF_matrix[,c(3,5)]
colnames(HFmrEF_matrix[,c(3,5)])
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
colnames(HFmrEF_matrix[,c(3,5)])
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
setnames(d, old = c("af","ar"), new = c("afib","areg"))
}
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
setnames(HFmrEF_matrix, old = c("af","ar"), new = c("afib","areg"))
}
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
setnames(as.data.frame(HFmrEF_matrix, old = c("af","ar"), new = c("afib","areg")))
}
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
setnames(as.data.frame(HFmrEF_matrix), old = c("af","ar"), new = c("afib","areg"))
}
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
setnames(as.data.frame(HFmrEF_matrix), old = c("af","ar"),
new = c("afib","areg"))
}
setnames
names(HFmrEF_matrix)[3]
View(HFmrEF_matrix)
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
colnames(HFmrEF_matrix[,3]) <- "af"
}
colnames(HFmrEF_matrix)[colnames(HFmrEF_matrix) == c("af", "ar")]
View(HFmrEF_matrix)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
bio_conductor <- "https://bioconductor.org/biocLite.R"
source(bio_conductor)
Packages <- c("reporttools", "VIM", "tikzDevice", "Hmisc",
"impute")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("../_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
load("../../raw_data/data_use_HFpEF_matrix.Rdat")
load("../../raw_data/data_use_HFmrEF_matrix.Rdat")
# ----------------------------------------------------------- #
# Replace NaN values with NA using the make_na function
# ----------------------------------------------------------- #
HFpEF_matrix <- make_na(HFpEF_matrix)
HFmrEF_matrix <- make_na(HFmrEF_matrix)
table(colnames(HFmrEF_matrix))
colnames(HFmrEF_matrix)[colnames(HFmrEF_matrix) == c("af", "ar")]
colnames(HFmrEF_matrix)[which(colnames(HFmrEF_matrix) == c("af", "ar"))]
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
}
View(HFmrEF_matrix)
HFmrEF_matrix[,c(3,5)]
colnames(HFmrEF_matrix[,c(3,5)])
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
View(HFmrEF_matrix)
names(HFmrEF_matrix)
names(as.data.frame(HFmrEF_matrix))
names(as.data.frame(HFmrEF_matrix))[c(3,5)]
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
names(as.data.frame(HFmrEF_matrix))[c(3,5)] <- c("afib", "areg")
}
names(as.data.frame(HFmrEF_matrix))[c(3,5)]
names(as.data.frame(HFmrEF_matrix))[c(3,5)] <- c("afib", "areg"
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
names(as.data.frame(HFmrEF_matrix))[c(3,5)] <- c("afib", "areg")
}
as.data.frame
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
names(as.data.frame(HFmrEF_matrix))[,c(3,5)] <- c("afib", "areg")
}
if(all(colnames(HFmrEF_matrix[,c(3,5)])==c("af", "ar"))){
names(as.data.frame(HFmrEF_matrix))[colnum(as.data.frame(HFmrEF_matrix)) == c(3,5)] <- c("afib", "areg")
}
View(HFmrEF_matrix)
?makeNames
?make.names
dir(HFmrEF_matrix)
attr(HFmrEF_matrix)
colnames(HFmrEF_matrix[,c(3,5)])
colnames(HFmrEF_matrix[,c(3,5)]) <- c("afib", "areg")
View(HFmrEF_matrix)
colnames(HFmrEF_matrix)[c(3,5)] <- c("afib", "areg")
View(HFmrEF_matrix)
colnames(HFmrEF_matrix)[c(3,5)] <- c("a-fib", "ai")
View(HFmrEF_matrix)
View(HFpEF_matrix)
View(HFmrEF_matrix)
colnames(HFmrEF_matrix)[c(3,5)] <- c("a-fib", "ai")
colnames(HFpEF_matrix)[c(4,8)] <- c("a-fib", "ai")
id_HFpEF <- c("patientid")
demo_HFpEF <- c("age", "gender", "white", "asian", "black",
"otherethnicity")
adm_symp_HFpEF <- c("breathless", "chestpain", "orthopnoea",
"peripheraloedema", "palpdizzyfalls",
"pnd")
adm_sign_HFpEF <- c("sbp", "dbp", "map", "admissionwgt",
"height", "bmiadmission", "weightchange",
"admissionsbnp", "pulse", "bp",
"asympthf", "devicetherapy")
risk_fact_HFpEF <- c("a-fib", "copd", "irondef", "obesity",
"obesitybmi30", "nyhaclass", "dm",
"copdasthma", "ihd", "osa", "ar")
comor_HFpEF <- c("comorbidities")
ecg_HFpEF <- c( "ecgblock", "ecgblockcomment",
"ecgqrsduration", "ecgqrsother", "ecgrate",
"ecgrhythmother", "twi", "lvh",
"normalecgqrs", "lbbb", "rbbb", "lvhlev",
"sr")
lab_test_HFpEF <- c("albumin", "hb", "hba1c", "wbc", "tsat",
"glucose", "plts", "pcv", "ferritin",
"k", "ironlevels", "chol", "ntprobnp",
"gfr", "mcv", "na")
echo_HFpEF <- c("lvef","ewave", "pasp", "tapse", "ea", "ee",
"laterals", "mr", "tr", "as", "awave",
"dilatedlv", "ladiameter", "ai", "laarea",
"raarea", "rwma", "calculatede", "rvfunction",
"edeceltime")
outcomes_HFpEF <- c("alive", "timefromprevadm", "timetohfadm",
"timetonextadm", "daysfollowupdischarge",
"hfhospitalisation", "daysfollowupbnp",
"los")
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
bio_conductor <- "https://bioconductor.org/biocLite.R"
source(bio_conductor)
Packages <- c("reporttools", "VIM", "tikzDevice", "Hmisc",
"impute")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("../_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
load("../../raw_data/data_use_HFpEF_matrix.Rdat")
load("../../raw_data/data_use_HFmrEF_matrix.Rdat")
# ----------------------------------------------------------- #
# Rename dupblicate names in variables af and ar
# ----------------------------------------------------------- #
colnames(HFmrEF_matrix)[c(3,5)] <- c("a-fib", "ai")
colnames(HFpEF_matrix)[c(4,8)] <- c("a-fib", "ai")
# ----------------------------------------------------------- #
# Replace NaN values with NA using the make_na function
# ----------------------------------------------------------- #
HFpEF_matrix <- make_na(HFpEF_matrix)
HFmrEF_matrix <- make_na(HFmrEF_matrix)
# ----------------------------------------------------------- #
# Store indicator and non-indicator variables in seperate
# variables using the rm_indicator function
# ----------------------------------------------------------- #
HFpEF_rm_ind <- rm_indicator(HFpEF_matrix, n_uniq = 5)
HFmrEF_rm_ind <- rm_indicator(HFmrEF_matrix, n_uniq = 5)
# ----------------------------------------------------------- #
# Store the non-indicator variables for later
# ----------------------------------------------------------- #
HFpEF_matrix_not_ind <- HFpEF_rm_ind$non_indicator
HFmrEF_matrix_not_ind <- HFmrEF_rm_ind$non_indicator
# ----------------------------------------------------------- #
# Store the indicator variables for later
# ----------------------------------------------------------- #
HFpEF_matrix_ind_var <- HFpEF_rm_ind$indicator
HFmrEF_matrix_ind_var <- HFmrEF_rm_ind$indicator
# ----------------------------------------------------------- #
# Move some variables between matrices in HFmrEF dataset
# ----------------------------------------------------------- #
# Change RVfunction from non-indicator to indicator variable
# ----------------------------------------------------------- #
HFmrEF_RV <- move_columns(HFmrEF_matrix_not_ind,
HFmrEF_matrix_ind_var,
"rvfunction")
HFmrEF_matrix_ind_var<- HFmrEF_RV$to_mat
HFmrEF_matrix_not_ind <- HFmrEF_RV$from_mat
# ----------------------------------------------------------- #
# Change BmIadmission from indicator variable to non_indicator
# variable
# ----------------------------------------------------------- #
HFmrEF_BMI <- move_columns(HFmrEF_matrix_ind_var,
HFmrEF_matrix_not_ind,
"bmiadmission")
HFmrEF_matrix_ind_var<- HFmrEF_BMI$from_mat
HFmrEF_matrix_not_ind <- HFmrEF_BMI$to_mat
# ----------------------------------------------------------- #
# Convert zeros to missings, the following variables are not to
# be converted.
# ----------------------------------------------------------- #
not_zeros_HFpEF <- c("comorbidities", "weightchange",
"daysfollowupdischarge", "timetonextadm")
not_zeros_HFmrEF <- c("numbercomorditiesnoida","comorbidities",
"timetoadmission", "timetoecho",
"timetofollowupfrombnp",
"timetofollowupfromdischarge",
"timetofirstcardiachospitalisation")
HFpEF_matrix_not_ind <- zero_to_na(HFpEF_matrix_not_ind,
not_zeros_HFpEF)
HFmrEF_matrix_not_ind <- zero_to_na(HFmrEF_matrix_not_ind,
not_zeros_HFmrEF)
# ----------------------------------------------------------- #
# Plot of missing values distribution
# ----------------------------------------------------------- #
path_to_images <- "../../../../doc/thesis/images/"
pdf(file=paste(c(path_to_images,"HFpEF_miss_dist.pdf"),
collapse = ""))
aggr(cbind(HFpEF_matrix_not_ind, HFpEF_matrix_ind_var),
plot = T, sortVars = T, bars = F, combined = T,
ylabs = "", cex.axis = 0.7)
dev.off()
pdf(file = paste(c(path_to_images, "HFmrEF_miss_dist.pdf"),
collapse = ""))
aggr(cbind(HFmrEF_matrix_not_ind, HFmrEF_matrix_ind_var),
plot = T, sortVars = T, bars = F, combined = T,
ylabs = "", cex.axis = 0.7)
dev.off()
# ----------------------------------------------------------- #
# Summary of variables
# ----------------------------------------------------------- #
# Reorder data matrix by phenotype domains
# ----------------------------------------------------------- #
# HFpEF matrix
# ----------------------------------------------------------- #
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF,
comor_HFpEF, ecg_HFpEF, lab_test_HFpEF,
echo_HFpEF, outcomes_HFpEF)
HFpEF_matrix[, HFpEF_df_names]
length(HFpEF_df_names)
id_HFpEF <- c("patientid")
demo_HFpEF <- c("age", "gender", "white", "asian", "black",
"otherethnicity")
adm_symp_HFpEF <- c("breathless", "chestpain", "orthopnoea",
"peripheraloedema", "palpdizzyfalls",
"pnd")
adm_sign_HFpEF <- c("sbp", "dbp", "map", "admissionwgt",
"height", "bmiadmission", "weightchange",
"admissionsbnp", "pulse", "bp",
"asympthf", "devicetherapy")
risk_fact_HFpEF <- c("a-fib", "copd", "irondef", "obesity",
"obesitybmi30", "nyhaclass", "dm",
"copdasthma", "ihd", "osa", "ar")
comor_HFpEF <- c("comorbidities")
ecg_HFpEF <- c( "ecgblock", "ecgblockcomment",
"ecgqrsduration", "ecgqrsother", "ecgrate",
"ecgrhythmother", "twi", "lvh",
"normalecgqrs", "lbbb", "rbbb", "lvhlev",
"sr")
lab_test_HFpEF <- c("albumin", "hb", "hba1c", "wbc", "tsat",
"glucose", "plts", "pcv", "ferritin",
"k", "ironlevels", "chol", "ntprobnp",
"gfr", "mcv", "na")
echo_HFpEF <- c("lvef","ewave", "pasp", "tapse", "ea", "ee",
"laterals", "mr", "tr", "as", "awave",
"dilatedlv", "ladiameter", "ai", "laarea",
"raarea", "rwma", "calculatede", "rvfunction",
"edeceltime")
outcomes_HFpEF <- c("alive", "timefromprevadm", "timetohfadm",
"timetonextadm", "daysfollowupdischarge",
"hfhospitalisation", "daysfollowupbnp",
"los")
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF)
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF)
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF)
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF,
comor_HFpEF)
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF,
comor_HFpEF, ecg_HFpEF)
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF,
comor_HFpEF, ecg_HFpEF, lab_test_HFpEF)
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF,
comor_HFpEF, ecg_HFpEF, lab_test_HFpEF)
HFpEF_matrix[, HFpEF_df_names]
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF)
HFpEF_matrix[, HFpEF_df_names]
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF)
HFpEF_matrix[, HFpEF_df_names]
risk_fact_HFpEF <- c("a-fib", "copd", "irondef", "obesity",
"obesitybmi30", "nyhaclass", "dm",
"copdasthma", "ihd", "osa")
HFpEF_df_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF)
HFpEF_matrix[, HFpEF_df_names]
length(HFpEF_df_names)
HFpEF_matrix[, risk_fact_HFpEF]
View(HFpEF_matrix)
risk_fact_HFpEF $in$ colnames(HFpEF)
risk_fact_HFpEF %in% colnames(HFpEF)
risk_fact_HFpEF %in% colnames(HFpEF_matrix)
View(HFmrEF_matrix)
risk_fact_HFpEF <- c("a-fib", "copdasthma", "irondef", "obesity",
"obesitybmi30", "nyhaclass", "dm",
"copdasthma", "ihd", "osa")
risk_fact_HFpEF %in% colnames(HFpEF_matrix)
# ----------------------------------------------------------- #
# Install relevant packages (if not already done)
# ----------------------------------------------------------- #
bio_conductor <- "https://bioconductor.org/biocLite.R"
source(bio_conductor)
Packages <- c("reporttools", "VIM", "tikzDevice", "Hmisc",
"impute")
# install.packages(Packages)
# ----------------------------------------------------------- #
# Load relevant packages and source helper functions
# ----------------------------------------------------------- #
lapply(Packages, library, character.only = T)
source("../_helper_func.R")
# ----------------------------------------------------------- #
# Load HFpEF and HFmrEF datafiles
# ----------------------------------------------------------- #
load("../../raw_data/data_use_HFpEF_matrix.Rdat")
load("../../raw_data/data_use_HFmrEF_matrix.Rdat")
# ----------------------------------------------------------- #
# Rename dupblicate names in variables af and ar
# ----------------------------------------------------------- #
colnames(HFmrEF_matrix)[c(3,5)] <- c("a-fib", "ai")
colnames(HFpEF_matrix)[c(4,8)] <- c("a-fib", "ai")
# ----------------------------------------------------------- #
# Replace NaN values with NA using the make_na function
# ----------------------------------------------------------- #
HFpEF_matrix <- make_na(HFpEF_matrix)
HFmrEF_matrix <- make_na(HFmrEF_matrix)
# ----------------------------------------------------------- #
# Store indicator and non-indicator variables in seperate
# variables using the rm_indicator function
# ----------------------------------------------------------- #
HFpEF_rm_ind <- rm_indicator(HFpEF_matrix, n_uniq = 5)
HFmrEF_rm_ind <- rm_indicator(HFmrEF_matrix, n_uniq = 5)
# ----------------------------------------------------------- #
# Store the non-indicator variables for later
# ----------------------------------------------------------- #
HFpEF_matrix_not_ind <- HFpEF_rm_ind$non_indicator
HFmrEF_matrix_not_ind <- HFmrEF_rm_ind$non_indicator
# ----------------------------------------------------------- #
# Store the indicator variables for later
# ----------------------------------------------------------- #
HFpEF_matrix_ind_var <- HFpEF_rm_ind$indicator
HFmrEF_matrix_ind_var <- HFmrEF_rm_ind$indicator
# ----------------------------------------------------------- #
# Move some variables between matrices in HFmrEF dataset
# ----------------------------------------------------------- #
# Change RVfunction from non-indicator to indicator variable
# ----------------------------------------------------------- #
HFmrEF_RV <- move_columns(HFmrEF_matrix_not_ind,
HFmrEF_matrix_ind_var,
"rvfunction")
HFmrEF_matrix_ind_var<- HFmrEF_RV$to_mat
HFmrEF_matrix_not_ind <- HFmrEF_RV$from_mat
# ----------------------------------------------------------- #
# Change BmIadmission from indicator variable to non_indicator
# variable
# ----------------------------------------------------------- #
HFmrEF_BMI <- move_columns(HFmrEF_matrix_ind_var,
HFmrEF_matrix_not_ind,
"bmiadmission")
HFmrEF_matrix_ind_var<- HFmrEF_BMI$from_mat
HFmrEF_matrix_not_ind <- HFmrEF_BMI$to_mat
# ----------------------------------------------------------- #
# Convert zeros to missings, the following variables are not to
# be converted.
# ----------------------------------------------------------- #
not_zeros_HFpEF <- c("comorbidities", "weightchange",
"daysfollowupdischarge", "timetonextadm")
not_zeros_HFmrEF <- c("numbercomorditiesnoida","comorbidities",
"timetoadmission", "timetoecho",
"timetofollowupfrombnp",
"timetofollowupfromdischarge",
"timetofirstcardiachospitalisation")
HFpEF_matrix_not_ind <- zero_to_na(HFpEF_matrix_not_ind,
not_zeros_HFpEF)
HFmrEF_matrix_not_ind <- zero_to_na(HFmrEF_matrix_not_ind,
not_zeros_HFmrEF)
# ----------------------------------------------------------- #
# Plot of missing values distribution
# ----------------------------------------------------------- #
path_to_images <- "../../../../doc/thesis/images/"
pdf(file=paste(c(path_to_images,"HFpEF_miss_dist.pdf"),
collapse = ""))
aggr(cbind(HFpEF_matrix_not_ind, HFpEF_matrix_ind_var),
plot = T, sortVars = T, bars = F, combined = T,
ylabs = "", cex.axis = 0.7)
dev.off()
pdf(file = paste(c(path_to_images, "HFmrEF_miss_dist.pdf"),
collapse = ""))
aggr(cbind(HFmrEF_matrix_not_ind, HFmrEF_matrix_ind_var),
plot = T, sortVars = T, bars = F, combined = T,
ylabs = "", cex.axis = 0.7)
dev.off()
# ----------------------------------------------------------- #
# Summary of variables
# ----------------------------------------------------------- #
# Reorder data matrix by phenotype domains
# ----------------------------------------------------------- #
# HFpEF matrix
# ----------------------------------------------------------- #
id_HFpEF <- c("patientid")
demo_HFpEF <- c("age", "gender", "white", "asian", "black",
"otherethnicity")
adm_symp_HFpEF <- c("breathless", "chestpain", "orthopnoea",
"peripheraloedema", "palpdizzyfalls",
"pnd")
adm_sign_HFpEF <- c("sbp", "dbp", "map", "admissionwgt",
"height", "bmiadmission", "weightchange",
"admissionsbnp", "pulse", "bp",
"asympthf", "devicetherapy")
risk_fact_HFpEF <- c("a-fib", "copdasthma", "irondef", "obesity",
"obesitybmi30", "nyhaclass", "dm",
"copdasthma", "ihd", "osa")
comor_HFpEF <- c("comorbidities")
ecg_HFpEF <- c( "ecgblock", "ecgblockcomment",
"ecgqrsduration", "ecgqrsother", "ecgrate",
"ecgrhythmother", "twi", "lvh",
"normalecgqrs", "lbbb", "rbbb", "lvhlev",
"sr")
lab_test_HFpEF <- c("albumin", "hb", "hba1c", "wbc", "tsat",
"glucose", "plts", "pcv", "ferritin",
"k", "ironlevels", "chol", "ntprobnp",
"gfr", "mcv", "na")
echo_HFpEF <- c("lvef","ewave", "pasp", "tapse", "ea", "ee",
"laterals", "mr", "tr", "as", "awave",
"dilatedlv", "ladiameter", "ai", "laarea",
"raarea", "rwma", "calculatede", "rvfunction",
"edeceltime")
outcomes_HFpEF <- c("alive", "timefromprevadm", "timetohfadm",
"timetonextadm", "daysfollowupdischarge",
"hfhospitalisation", "daysfollowupbnp",
"los")
echo_HFpEF %in% colnames(HFpEF_matrix)
lab_test_HFpEF %in% colnames(HFpEF_matrix)
outcomes_HFpEF_HFpEF %in% colnames(HFpEF_matrix)
outcomes_HFpEF %in% colnames(HFpEF_matrix)
df_HFpEF_names <- c(id_HFpEF, demo_HFpEF, adm_symp_HFpEF,
adm_sign_HFpEF, risk_fact_HFpEF,
comor_HFpEF, ecg_HFpEF, lab_test_HFpEF,
echo_HFpEF, outcomes_HFpEF)
HFpEF_matrix[,df_HFpEF_names]
length(df_HFpEF_names)
df_HFpEF <- HFpEF_matrix[,df_HFpEF_names]
cap_desc_HFpEF <- "Patient characteristics: HFpEF variables"
lab_desc_HFpEF <- "tab:desc_stat_HFpEF_variables"
tableContinuous(df_HFpEF,
stats = c("n", "na", "min", "max", "mean", "median", "s",
"q1", "q3"),
cap = cap_desc_HFpEF, lab = lab_desc_HFpEF)
df_HFpEF <- as.data.frame(HFpEF_matrix[,df_HFpEF_names])
cap_desc_HFpEF <- "Patient characteristics: HFpEF variables"
lab_desc_HFpEF <- "tab:desc_stat_HFpEF_variables"
tableContinuous(df_HFpEF,
stats = c("n", "na", "min", "max", "mean", "median", "s",
"q1", "q3"),
cap = cap_desc_HFpEF, lab = lab_desc_HFpEF)
cap_desc_HFpEF <- "Patient characteristics: HFpEF variables"
lab_desc_HFpEF <- "tab:desc_stat_HFpEF_variables"
tableContinuous(df_HFpEF,
stats = c("n", "na", "min", "max", "mean",
"median", "s", "q1", "q3"),
cap = cap_desc_HFpEF, lab = lab_desc_HFpEF)
